use bevy::{diagnostic::FrameTimeDiagnosticsPlugin, prelude::*};

use super::{
    crosshair, hud,
    map::{setup_maze_grid, setup_minimap, update_player_dots, MazeMap},
};

pub struct UiPlugin;

impl Plugin for UiPlugin {
    fn build(&self, app: &mut App) {
        app.insert_resource(MazeMap {
            grid: vec![
                vec![1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                vec![1,2,0,0,0,2,1,2,0,0,0,2,1,2,0,0,0,0,0,3,0,0,0,0,0,0,2,1,0,2,1],
                vec![1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1],
                vec![1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1],
                vec![1,3,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,2,0,0,0,2,1,0,0,0,0,0,1],
                vec![1,0,0,1,0,0,0,0,0,0,0,0,1,2,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1],
                vec![1,0,0,1,1,1,1,0,0,3,0,0,1,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1],
                vec![1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1],
                vec![1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,3,0,0,0,0,1],
                vec![1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,0,0,1],
                vec![1,2,0,0,0,0,1,0,0,0,0,0,1,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1],
                vec![1,0,0,0,0,0,1,2,0,0,0,0,1,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,1],
                vec![1,0,0,1,0,0,1,1,1,1,0,0,1,0,0,1,0,0,3,0,0,1,1,1,1,1,1,1,0,0,1],
                vec![1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
                vec![1,0,0,1,2,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
                vec![1,0,0,1,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,1],
                vec![1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,2,1],
                vec![1,3,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,3,0,1,0,0,1,0,0,1],
                vec![1,0,0,1,1,1,1,0,0,3,0,0,1,1,1,1,0,0,1,0,0,1,1,1,1,0,0,1,0,0,1],
                vec![1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1],
                vec![1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,0,0,0,1,3,0,0,0,0,1],
                vec![1,0,0,1,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1],
                vec![1,0,0,0,0,0,1,2,0,1,0,0,0,0,0,1,2,0,0,0,0,0,0,0,1,0,0,1,2,0,1],
                vec![1,2,0,0,0,0,1,0,0,1,0,0,0,0,3,1,0,0,0,0,0,0,0,3,1,0,0,1,0,0,1],
                vec![1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,0,0,1],
                vec![1,3,0,0,0,0,0,0,0,1,0,0,1,2,0,0,0,0,1,2,0,0,0,0,0,0,0,1,0,0,1],
                vec![1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,0,0,0,0,0,0,0,2,1,0,0,1],
                vec![1,0,0,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1],
                vec![1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,1],
                vec![1,2,0,0,0,0,0,0,0,0,0,3,1,2,0,0,0,0,1,2,0,0,0,0,3,0,0,0,0,2,1],
                vec![1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            ],

            cell_size: 4.0,
            maze_size: 31,
        })
        .add_systems(Startup, setup_minimap)
        .add_systems(Update, setup_maze_grid)
        .add_systems(Update, update_player_dots);
        app.add_plugins(FrameTimeDiagnosticsPlugin)
            .add_systems(
                Startup,
                (
                    crosshair::spawn_crosshair,
                    hud::setup_hud_ui,
                    hud::setup_timer,
                ),
            )
            .add_systems(
                Update,
                (
                    hud::update_fps_ui,
                    hud::update_game_time_ui,
                    hud::update_player_health_ui,
                    hud::update_player_armor_ui,
                    hud::update_player_ammo_ui,
                    hud::update_player_weapon_ui,
                    hud::update_head,
                    hud::update_head_backgroung,
                ),
            );
    }
}
